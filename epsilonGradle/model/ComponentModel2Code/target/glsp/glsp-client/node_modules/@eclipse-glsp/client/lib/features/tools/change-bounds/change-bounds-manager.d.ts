/********************************************************************************
 * Copyright (c) 2024 Axon Ivy AG and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Dimension, GModelElement, ISnapper, KeyboardModifier, MousePositionTracker, Movement, Point, Vector } from '@eclipse-glsp/sprotty';
import { FeedbackEmitter } from '../../../base/feedback/feedback-emitter';
import { ResizeHandleLocation } from '../../change-bounds/model';
import { IMovementRestrictor } from '../../change-bounds/movement-restrictor';
import { GridManager } from '../../grid/grid-manager';
import { IHelperLineManager } from '../../helper-lines/helper-line-manager';
import { ChangeBoundsTracker, TrackedElementMove, TrackedElementResize, TrackedMove, TrackedResize } from './change-bounds-tracker';
export declare const CSS_RESIZE_MODE = "resize-mode";
export declare const CSS_RESTRICTED_RESIZE = "resize-not-allowed";
export declare const CSS_ACTIVE_HANDLE = "active";
export declare class ChangeBoundsManager {
    readonly positionTracker: MousePositionTracker;
    readonly movementRestrictor?: IMovementRestrictor | undefined;
    readonly snapper?: ISnapper | undefined;
    readonly helperLineManager?: IHelperLineManager | undefined;
    protected gridManager?: GridManager | undefined;
    constructor(positionTracker: MousePositionTracker, movementRestrictor?: IMovementRestrictor | undefined, snapper?: ISnapper | undefined, helperLineManager?: IHelperLineManager | undefined, gridManager?: GridManager | undefined);
    unsnapModifier(): KeyboardModifier | undefined;
    usePositionSnap(arg: MouseEvent | KeyboardEvent | any): boolean;
    snapPosition(element: GModelElement, position: Point): Point;
    isValid(element: GModelElement): boolean;
    hasValidPosition(element: GModelElement, position?: Point): boolean;
    hasValidSize(element: GModelElement, size?: Dimension): boolean;
    getMinimumSize(element: GModelElement): Dimension;
    useMovementRestriction(arg: MouseEvent | KeyboardEvent | any): boolean;
    restrictMovement(element: GModelElement, movement: Movement): Movement;
    protected getMinimumMovement(element: GModelElement, movement: Movement): Vector | undefined;
    addMoveFeedback(feedback: FeedbackEmitter, trackedMove: TrackedMove, ctx?: GModelElement, event?: MouseEvent): FeedbackEmitter;
    addResizeFeedback(feedback: FeedbackEmitter, resize: TrackedResize, ctx?: GModelElement, event?: MouseEvent): FeedbackEmitter;
    addMoveRestrictionFeedback(feedback: FeedbackEmitter, change: TrackedElementResize | TrackedElementMove, ctx?: GModelElement, event?: MouseEvent): FeedbackEmitter;
    defaultResizeLocations(): ResizeHandleLocation[];
    useSymmetricResize(arg: MouseEvent | KeyboardEvent | any): boolean;
    createTracker(): ChangeBoundsTracker;
}
//# sourceMappingURL=change-bounds-manager.d.ts.map