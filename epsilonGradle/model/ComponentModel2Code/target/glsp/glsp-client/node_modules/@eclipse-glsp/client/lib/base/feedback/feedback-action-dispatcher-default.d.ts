/********************************************************************************
 * Copyright (c) 2019-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Action, ActionHandlerRegistry, Command, CommandExecutionContext, Disposable, IActionDispatcher, ICommand, ILogger } from '@eclipse-glsp/sprotty';
import { FeedbackEmitter } from './feedback-emitter';
import { IFeedbackActionDispatcher, IFeedbackEmitter, MaybeActions } from './feedback-action-dispatcher';
export declare class FeedbackActionDispatcher implements IFeedbackActionDispatcher {
    protected registeredFeedback: Map<IFeedbackEmitter, Action[]>;
    protected actionDispatcher: () => Promise<IActionDispatcher>;
    protected logger: ILogger;
    protected actionHandlerRegistry: ActionHandlerRegistry;
    registerFeedback(feedbackEmitter: IFeedbackEmitter, feedbackActions: Action[], cleanupActions?: MaybeActions): Disposable;
    deregisterFeedback(feedbackEmitter: IFeedbackEmitter, cleanupActions?: MaybeActions): void;
    getRegisteredFeedback(): Action[];
    getRegisteredFeedbackEmitters(action: Action): IFeedbackEmitter[];
    getFeedbackCommands(): Command[];
    applyFeedbackCommands(context: CommandExecutionContext): Promise<void>;
    protected actionToCommands(action: Action): ICommand[];
    createEmitter(): FeedbackEmitter;
    protected dispatchFeedback(actions: Action[], feedbackEmitter: IFeedbackEmitter): Promise<void>;
}
//# sourceMappingURL=feedback-action-dispatcher-default.d.ts.map